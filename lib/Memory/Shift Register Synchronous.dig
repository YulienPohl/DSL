<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>direction: 
    true - left shift
    false - right shift</string>
    </entry>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Label</string>
      <string>Shift-Reg</string>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>s_in</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>s_out</string>
        </entry>
      </elementAttributes>
      <pos x="460" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>p_in</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>p_out</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="460" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ld</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>en</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Clock</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>clr</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Or</elementName>
      <elementAttributes/>
      <pos x="200" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>bits := 8;
direction := &quot;l&quot;;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>Register Synchronous.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>bits := args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="300" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>s1 := addComponent(&quot;Splitter&quot;, 4, 4);
s1.&apos;Output Splitting&apos; = &quot;&quot; + args.bits;

s2 := addComponent(&quot;Splitter&quot;, 20, 6);
s2.&apos;Input Splitting&apos; = &quot;&quot; + args.bits;
s2.rotation = 1;

if (args.direction = &quot;l&quot;) {
    s1.&apos;Input Splitting&apos; = &quot;1,&quot; + (args.bits-1);
    s1.mirror = true;

    s2.&apos;Output Splitting&apos; = (args.bits-1) + &quot;,1&quot;;
    s2.mirror = false;

    addWire(3,3,4,3);
    addWire(2,4,4,4);

    addWire(19,2,20,2);
    addWire(20,2,20,5);
    addWire(21,2,21,5);
} else if (args.direction = &quot;r&quot;) {
    s1.&apos;Input Splitting&apos; = (args.bits-1) + &quot;,1&quot;;
    s1.mirror = false;

    s2.&apos;Output Splitting&apos; = &quot;1,&quot; + (args.bits-1);
    s2.mirror = true;

    addWire(2,4,2,5);
    addWire(2,5,4,5);
    addWire(3,3,3,4);
    addWire(3,4,4,4);

    addWire(19,2,19,5);
    addWire(20,2,21,2);
    addWire(20,2,20,5);
} else {
    panic(&quot;Direction must be &apos;l&apos; or &apos;r&apos;!&quot;);
}</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-1180"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="0" y="240"/>
      <p2 x="280" y="240"/>
    </wire>
    <wire>
      <p1 x="0" y="80"/>
      <p2 x="40" y="80"/>
    </wire>
    <wire>
      <p1 x="100" y="80"/>
      <p2 x="120" y="80"/>
    </wire>
    <wire>
      <p1 x="0" y="0"/>
      <p2 x="180" y="0"/>
    </wire>
    <wire>
      <p1 x="0" y="160"/>
      <p2 x="140" y="160"/>
    </wire>
    <wire>
      <p1 x="260" y="160"/>
      <p2 x="300" y="160"/>
    </wire>
    <wire>
      <p1 x="140" y="160"/>
      <p2 x="200" y="160"/>
    </wire>
    <wire>
      <p1 x="160" y="100"/>
      <p2 x="300" y="100"/>
    </wire>
    <wire>
      <p1 x="280" y="180"/>
      <p2 x="300" y="180"/>
    </wire>
    <wire>
      <p1 x="0" y="120"/>
      <p2 x="120" y="120"/>
    </wire>
    <wire>
      <p1 x="280" y="120"/>
      <p2 x="300" y="120"/>
    </wire>
    <wire>
      <p1 x="180" y="120"/>
      <p2 x="200" y="120"/>
    </wire>
    <wire>
      <p1 x="60" y="40"/>
      <p2 x="380" y="40"/>
    </wire>
    <wire>
      <p1 x="420" y="40"/>
      <p2 x="460" y="40"/>
    </wire>
    <wire>
      <p1 x="0" y="200"/>
      <p2 x="260" y="200"/>
    </wire>
    <wire>
      <p1 x="360" y="140"/>
      <p2 x="400" y="140"/>
    </wire>
    <wire>
      <p1 x="260" y="140"/>
      <p2 x="280" y="140"/>
    </wire>
    <wire>
      <p1 x="400" y="140"/>
      <p2 x="460" y="140"/>
    </wire>
    <wire>
      <p1 x="400" y="120"/>
      <p2 x="400" y="140"/>
    </wire>
    <wire>
      <p1 x="260" y="160"/>
      <p2 x="260" y="200"/>
    </wire>
    <wire>
      <p1 x="180" y="0"/>
      <p2 x="180" y="120"/>
    </wire>
    <wire>
      <p1 x="280" y="120"/>
      <p2 x="280" y="140"/>
    </wire>
    <wire>
      <p1 x="280" y="180"/>
      <p2 x="280" y="240"/>
    </wire>
    <wire>
      <p1 x="140" y="120"/>
      <p2 x="140" y="160"/>
    </wire>
    <wire>
      <p1 x="60" y="40"/>
      <p2 x="60" y="60"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>
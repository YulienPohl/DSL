<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>The Fixed Divide returns the quotient of a and b.
a, b and c have the same bit width and radix.
If &quot;saturate = true&quot;, the largest possible number is output at overflow, if &quot;false&quot; the upper bits are truncated.
If &quot;round = true&quot;, the result will be rounded.
If &quot;b = 0&quot; the largest possible number is output.

{{de 
Der Fixed Divide gibt den Quotient von a und b zurück.
a, b und c haben die gleiche Bitbreite und Radix.
Falls &quot;saturate = true&quot; ist, wird beim overflow die größt mögliche Zahl ausgegeben, wenn &quot;false&quot; werden die oberen Bits abgeschnitten.
Falls &quot;round = true&quot; ist, wird das Ergebnis gerundet.
Falls &quot;b = 0&quot; die größtmögliche Zahl ausgegeben.
}}</string>
    </entry>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Label</string>
      <string>Div</string>
    </entry>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>a</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.intFormat = global.fixed_format;
this.fixedPoint = args.radix;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>b</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.intFormat = global.fixed_format;
this.fixedPoint = args.radix;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>q</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.intFormat = global.fixed_format;
this.fixedPoint = args.radix;</string>
        </entry>
      </elementAttributes>
      <pos x="420" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>bits := 16;
radix := 8;
round := true;
saturate := true;
signed := true;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>Fixed Resize.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_bits := args.bits;
in_radix := args.radix;
out_bits := global.div_bits;
out_radix := global.div_in_radix;
round := false;
saturate := false;
signed := args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Fixed Resize.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_bits := args.bits;
in_radix := args.radix;
out_bits := global.div_bits;
out_radix := args.radix;
round := false;
saturate := false;
signed := args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>if (args.signed) {
    global.saturate := !(1 &lt;&lt; (args.bits - 1));
    global.fixed_format := 8;
} else {
    global.saturate := !(1 &lt;&lt; args.bits);
    global.fixed_format := 7;
}

global.div_bits  := 2 * args.bits;
global.div_in_radix := args.radix + args.bits;
global.div_out_radix := args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-400"/>
    </visualElement>
    <visualElement>
      <elementName>Div</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = global.div_bits;
this.Signed = args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="160" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Comparator</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.Signed = args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="40" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.Value = global.saturate;</string>
        </entry>
      </elementAttributes>
      <pos x="300" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Fixed Resize.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_bits := global.div_bits;
in_radix := global.div_out_radix;
out_bits := args.bits;
out_radix := args.radix;
round := args.round;
saturate := args.saturate;
signed := args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="240" y="0"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="0" y="0"/>
      <p2 x="60" y="0"/>
    </wire>
    <wire>
      <p1 x="120" y="0"/>
      <p2 x="160" y="0"/>
    </wire>
    <wire>
      <p1 x="300" y="0"/>
      <p2 x="340" y="0"/>
    </wire>
    <wire>
      <p1 x="220" y="0"/>
      <p2 x="240" y="0"/>
    </wire>
    <wire>
      <p1 x="140" y="20"/>
      <p2 x="160" y="20"/>
    </wire>
    <wire>
      <p1 x="380" y="20"/>
      <p2 x="420" y="20"/>
    </wire>
    <wire>
      <p1 x="300" y="-40"/>
      <p2 x="320" y="-40"/>
    </wire>
    <wire>
      <p1 x="40" y="120"/>
      <p2 x="60" y="120"/>
    </wire>
    <wire>
      <p1 x="320" y="40"/>
      <p2 x="340" y="40"/>
    </wire>
    <wire>
      <p1 x="0" y="60"/>
      <p2 x="40" y="60"/>
    </wire>
    <wire>
      <p1 x="120" y="60"/>
      <p2 x="140" y="60"/>
    </wire>
    <wire>
      <p1 x="40" y="60"/>
      <p2 x="60" y="60"/>
    </wire>
    <wire>
      <p1 x="40" y="140"/>
      <p2 x="60" y="140"/>
    </wire>
    <wire>
      <p1 x="120" y="140"/>
      <p2 x="360" y="140"/>
    </wire>
    <wire>
      <p1 x="320" y="-40"/>
      <p2 x="320" y="40"/>
    </wire>
    <wire>
      <p1 x="40" y="60"/>
      <p2 x="40" y="120"/>
    </wire>
    <wire>
      <p1 x="360" y="40"/>
      <p2 x="360" y="140"/>
    </wire>
    <wire>
      <p1 x="140" y="20"/>
      <p2 x="140" y="60"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>
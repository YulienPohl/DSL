<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>The Dynamic Fixed Subtract returns the difference between a and b.
This circuit is the equivalent of the VHDL standard library &quot;fixed_generic_pkg&quot;.
a, b can have different bit width and radix, where s has bit width of &quot;max(a_bits, b_bits) + 1&quot; and radix has &quot;max(a_radix, b_radix)&quot;.

{{de 
Der Dynamic Fixed Subtract gibt die Differenz von a und b zurück.
Dieser Schaltkreis is das Äquivalent von der VHDL Standard Bibliothek &quot;fixed_generic_pkg&quot;
a, b können eine unterschiedliche Bitbreite und Radix haben, wobei s die Bitbreite von &quot;max(a_bits, b_bits) + 1&quot; und Radix &quot;max(a_radix, b_radix)&quot; hat.
}}</string>
    </entry>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Label</string>
      <string>Sub</string>
    </entry>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>a</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.a_bits;
this.intFormat = global.fixed_format;
this.fixedPoint = args.a_radix;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>b</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.b_bits;
this.intFormat = global.fixed_format;
this.fixedPoint = args.b_radix;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>s</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = global.out_bits;
this.intFormat = global.fixed_format;
this.fixedPoint = global.out_radix;</string>
        </entry>
      </elementAttributes>
      <pos x="260" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>a_bits := 16;
a_radix := 8;
b_bits := 16;
b_radix := 8;
signed := true;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>Ground</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
      </elementAttributes>
      <pos x="140" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Fixed Resize.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_bits := args.a_bits;
in_radix := args.a_radix;
out_bits := global.out_bits;
out_radix := global.out_radix;
round := false;
saturate := false;
signed := args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="40" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Fixed Resize.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_bits := args.b_bits;
in_radix := args.b_radix;
out_bits := global.out_bits;
out_radix := global.out_radix;
round := false;
saturate := false;
signed := args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="40" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>Sub</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = global.out_bits;</string>
        </entry>
      </elementAttributes>
      <pos x="160" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>if (args.signed) {
    global.fixed_format := 8;
} else {
    global.fixed_format := 7;
}

global.out_bits := max(args.a_bits, args.b_bits) + 1;
global.out_radix := max(args.a_radix, args.b_radix);</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-280"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="0" y="0"/>
      <p2 x="40" y="0"/>
    </wire>
    <wire>
      <p1 x="100" y="0"/>
      <p2 x="160" y="0"/>
    </wire>
    <wire>
      <p1 x="220" y="0"/>
      <p2 x="260" y="0"/>
    </wire>
    <wire>
      <p1 x="120" y="20"/>
      <p2 x="160" y="20"/>
    </wire>
    <wire>
      <p1 x="140" y="40"/>
      <p2 x="160" y="40"/>
    </wire>
    <wire>
      <p1 x="100" y="60"/>
      <p2 x="120" y="60"/>
    </wire>
    <wire>
      <p1 x="0" y="60"/>
      <p2 x="40" y="60"/>
    </wire>
    <wire>
      <p1 x="120" y="20"/>
      <p2 x="120" y="60"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>
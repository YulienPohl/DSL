<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>The Bit Extender extends the bit width from &quot;in_bits&quot; to &quot;out_bits&quot;.
If &quot;signed = True&quot;, the MSB is extended.

{{de 
Der Bit Extender erweitert die Bitbreite von &quot;in_bits&quot; zu &quot;out_bits&quot;.
Falls &quot;signed = True&quot;, wird der MSB erweitert.
}}</string>
    </entry>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Label</string>
      <string>Bit-Ext</string>
    </entry>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>in</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.in_bits;
this.intFormat = global.int_format;</string>
        </entry>
      </elementAttributes>
      <pos x="-40" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>out</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.out_bits;
this.intFormat = global.int_format;</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>in_bits := 4;
out_bits := 8;
signed := false;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>if (args.in_bits &gt; args.out_bits) {
    panic(&quot;in_bits &gt;= out_bits!&quot;);
}

if (args.signed) {
    global.int_format := 2;
} else {
    global.int_format := 1;
}

if (args.in_bits != args.out_bits) {
    if (args.signed) {
        e := addComponent(&quot;BitExtender&quot;, 0, 0);
        e.inputBits = args.in_bits;
        e.outputBits = args.out_bits;
        
        addWire(3, 0, 4, 0);
    } else {
        ext_bits := args.out_bits - args.in_bits;
    
        s := addComponent(&quot;Splitter&quot;, 3, 0);
        s.&apos;Input Splitting&apos; = args.in_bits + &quot;,&quot; + ext_bits;
        s.&apos;Output Splitting&apos; = &quot;&quot; + args.out_bits;
        
        g := addComponent(&quot;Ground&quot;, 1, 1);
        g.Bits = ext_bits;
        g.rotation = 1;
        
        addWire(0, 0, 3, 0);
        addWire(1, 1, 3, 1);
    }
} else {
    addWire(0, 0, 4, 0);
}</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-1060"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>in out 
loop(i, 1 &lt;&lt; 4)
    (i) (i)
end loop</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>in_bits := 4;
out_bits := 8;
signed := false;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-220"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>in out 
loop(i, 1 &lt;&lt; 3)
    (i) (i)
end loop
loop(i, 1 &lt;&lt; 3)
    (-i) (-i)
end loop</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>in_bits := 4;
out_bits := 8;
signed := true;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-160"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="80" y="0"/>
      <p2 x="120" y="0"/>
    </wire>
    <wire>
      <p1 x="-40" y="0"/>
      <p2 x="0" y="0"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>
<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>Maximum outputs the largest number of &quot;a&quot; or &quot;b&quot;.

{{de Maximum gibt die größte Zahl von &quot;a&quot; oder &quot;b&quot; aus.}}</string>
    </entry>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Label</string>
      <string>Max</string>
    </entry>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>a</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.intFormat = global.int_format;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>max</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.intFormat = global.int_format;</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>b</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.intFormat = global.int_format;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Comparator</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;
this.Signed = args.signed;</string>
        </entry>
      </elementAttributes>
      <pos x="80" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="260" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>NOr</elementName>
      <elementAttributes/>
      <pos x="180" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>bits := 4;
signed := true;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>if (args.signed) {
    global.int_format := 2;
} else {
    global.int_format := 1;
}</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-200"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>a b max
loop(aa, 1 &lt;&lt; 4)
    loop(bb, 1 &lt;&lt; 4)
        let m = ite(aa &gt; bb, aa, bb);
        (aa) (bb) (m)
    end loop
end loop</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>bits := 4;
signed := false;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-220"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>a b max
loop(aa, 1 &lt;&lt; 3)
    loop(bb, 1 &lt;&lt; 3)
        let m = ite(aa &gt; bb, aa, bb);
        (aa) (bb) (m)
    end loop
end loop</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>bits := 4;
signed := true;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-160"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="0" y="0"/>
      <p2 x="60" y="0"/>
    </wire>
    <wire>
      <p1 x="60" y="0"/>
      <p2 x="260" y="0"/>
    </wire>
    <wire>
      <p1 x="140" y="80"/>
      <p2 x="180" y="80"/>
    </wire>
    <wire>
      <p1 x="60" y="80"/>
      <p2 x="80" y="80"/>
    </wire>
    <wire>
      <p1 x="0" y="100"/>
      <p2 x="40" y="100"/>
    </wire>
    <wire>
      <p1 x="140" y="100"/>
      <p2 x="160" y="100"/>
    </wire>
    <wire>
      <p1 x="260" y="100"/>
      <p2 x="280" y="100"/>
    </wire>
    <wire>
      <p1 x="40" y="100"/>
      <p2 x="80" y="100"/>
    </wire>
    <wire>
      <p1 x="300" y="20"/>
      <p2 x="340" y="20"/>
    </wire>
    <wire>
      <p1 x="160" y="120"/>
      <p2 x="180" y="120"/>
    </wire>
    <wire>
      <p1 x="40" y="40"/>
      <p2 x="260" y="40"/>
    </wire>
    <wire>
      <p1 x="160" y="100"/>
      <p2 x="160" y="120"/>
    </wire>
    <wire>
      <p1 x="280" y="40"/>
      <p2 x="280" y="100"/>
    </wire>
    <wire>
      <p1 x="40" y="40"/>
      <p2 x="40" y="100"/>
    </wire>
    <wire>
      <p1 x="60" y="0"/>
      <p2 x="60" y="80"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>
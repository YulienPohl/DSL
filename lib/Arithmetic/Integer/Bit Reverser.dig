<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>The Bit Reverser reverses the order of the bits.

{{de Der Bit Reverser dreht die Reihenfolge der Bits um.}}</string>
    </entry>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>in</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="-40" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>out</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>bits := 8;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-100"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>s1 := addComponent(&quot;Splitter&quot;, 0, 0);
s1.&apos;Input Splitting&apos; = &quot;&quot; + args.bits;
s1.&apos;Output Splitting&apos; = &quot;1*&quot; + args.bits;

s2 := addComponent(&quot;Splitter&quot;, 3, args.bits - 1);
s2.&apos;Input Splitting&apos; = &quot;1*&quot; + args.bits;
s2.&apos;Output Splitting&apos; = &quot;&quot; + args.bits;
s2.mirror = true;

addWire(4, args.bits - 1, 6, 0);

for (i := 0; i &lt; args.bits; i++) {
    addWire(1, i, 3, i);
}</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-460"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>in    out
0b000 0b000
0b001 0b100
0b010 0b010
0b011 0b110
0b100 0b001
0b101 0b101
0b110 0b011
0b111 0b111</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>bits := 3;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-160"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="-40" y="0"/>
      <p2 x="0" y="0"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>
<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Description</string>
      <string>Find Rightmost outputs the position of the lowest &quot;val&quot; bit.
If no bit was found, -1 is output.

{{de 
Find Rightmost gibt die Position des niedrigsten &quot;val&quot; Bits aus.
Falls keine kein Bit gefunden wurde, wird -1 ausgegeben.
}}</string>
    </entry>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
    <entry>
      <string>Label</string>
      <string>Find-Right</string>
    </entry>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>GenericInitCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>bits := 7;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-140"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>pos</string>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>decSigned</intFormat>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = global.bits + 1;</string>
        </entry>
      </elementAttributes>
      <pos x="360" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>PriorityEncoder</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.&apos;Selector Bits&apos; = global.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>GenericCode</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>global.bits := bitsNeededFor(args.bits-1);
n := 1 &lt;&lt; global.bits;
m := n - args.bits;

addWire(0, 0, 0, n-1);
addWire(0, n-1, 1, n-1);

s := addComponent(&quot;Splitter&quot;, 1, n-1);
s.mirror = true;
s.&apos;Output Splitting&apos; = &quot;1*&quot; + n;

if (m != 0) {
    s.&apos;Input Splitting&apos; = args.bits + &quot;,&quot; + m;

    g := addComponent(&quot;Ground&quot;, 1, n-2);
    g.rotation = 1;
    g.Bits = m;
} else {
    s.&apos;Input Splitting&apos; = &quot;&quot; + args.bits;
}

for (i := 0; i &lt; n; i++) {
    addWire(2, i, 3, i);
}</string>
        </entry>
      </elementAttributes>
      <pos x="120" y="-800"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>arg</string>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>dec</intFormat>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="-180" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>val</string>
        </entry>
      </elementAttributes>
      <pos x="-180" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits = args.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="-120" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = global.bits + 1;</string>
        </entry>
      </elementAttributes>
      <pos x="280" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = global.bits + 1;
this.Value = -1;</string>
        </entry>
      </elementAttributes>
      <pos x="260" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>mirror</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.&apos;Input Splitting&apos; = global.bits + &quot;,1&quot;;
this.&apos;Output Splitting&apos; = &quot;&quot; + (global.bits + 1);</string>
        </entry>
      </elementAttributes>
      <pos x="240" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Ground</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
      </elementAttributes>
      <pos x="220" y="-20"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>this.Bits = global.bits;</string>
        </entry>
      </elementAttributes>
      <pos x="160" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>arg    val pos
0b0100 1   2
0b0000 1   (-1)
0b0100 0   0
0b1111 0   (-1)</dataString>
          </testData>
        </entry>
        <entry>
          <string>generic</string>
          <string>bits := 4;</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="-200"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="-180" y="0"/>
      <p2 x="-140" y="0"/>
    </wire>
    <wire>
      <p1 x="-20" y="0"/>
      <p2 x="0" y="0"/>
    </wire>
    <wire>
      <p1 x="260" y="0"/>
      <p2 x="280" y="0"/>
    </wire>
    <wire>
      <p1 x="200" y="0"/>
      <p2 x="240" y="0"/>
    </wire>
    <wire>
      <p1 x="140" y="0"/>
      <p2 x="160" y="0"/>
    </wire>
    <wire>
      <p1 x="-140" y="-20"/>
      <p2 x="-120" y="-20"/>
    </wire>
    <wire>
      <p1 x="-80" y="-20"/>
      <p2 x="-60" y="-20"/>
    </wire>
    <wire>
      <p1 x="220" y="-20"/>
      <p2 x="240" y="-20"/>
    </wire>
    <wire>
      <p1 x="320" y="-20"/>
      <p2 x="360" y="-20"/>
    </wire>
    <wire>
      <p1 x="-140" y="20"/>
      <p2 x="-60" y="20"/>
    </wire>
    <wire>
      <p1 x="140" y="20"/>
      <p2 x="300" y="20"/>
    </wire>
    <wire>
      <p1 x="260" y="-40"/>
      <p2 x="280" y="-40"/>
    </wire>
    <wire>
      <p1 x="-180" y="40"/>
      <p2 x="-40" y="40"/>
    </wire>
    <wire>
      <p1 x="-40" y="20"/>
      <p2 x="-40" y="40"/>
    </wire>
    <wire>
      <p1 x="-140" y="-20"/>
      <p2 x="-140" y="0"/>
    </wire>
    <wire>
      <p1 x="-140" y="0"/>
      <p2 x="-140" y="20"/>
    </wire>
    <wire>
      <p1 x="300" y="0"/>
      <p2 x="300" y="20"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>